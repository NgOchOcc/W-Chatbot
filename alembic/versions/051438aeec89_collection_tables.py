"""collection tables

Revision ID: 051438aeec89
Revises: d101dfb244f9
Create Date: 2025-08-18 22:30:11.536437

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '051438aeec89'
down_revision: Union[str, Sequence[str], None] = 'd101dfb244f9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collection_document_statuses',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('collection_statuses',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('collections',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(length=63), nullable=False),
                    sa.Column('status_id', sa.Integer(), nullable=False),
                    sa.Column('modified_date', sa.TIMESTAMP(), nullable=False),
                    sa.ForeignKeyConstraint(['status_id'], ['collection_statuses.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('collection_documents',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('collection_id', sa.Integer(), nullable=False),
                    sa.Column('document_id', sa.Integer(), nullable=False),
                    sa.Column('status_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ),
                    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
                    sa.ForeignKeyConstraint(['status_id'], ['collection_document_statuses.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###

    conn = op.get_bind()
    conn.execute(
        sa.text(
            """
            INSERT INTO collection_statuses(name) VALUES (:name)
            """
        ),
        [
            {"name": "new"},
            {"name": "done"},
            {"name": "failed"},
            {"name": "approved"},
            {"name": "running"},
        ]
    )

    conn.execute(
        sa.text(
            """
            INSERT INTO collection_document_statuses(name) VALUES (:name)
            """
        ),
        [
            {"name": "new"},
            {"name": "done"},
            {"name": "running"},
            {"name": "failed"},
            {"name": "in progress"},
        ]
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('collection_documents')
    op.drop_table('collections')
    op.drop_table('collection_statuses')
    op.drop_table('collection_document_statuses')
    # ### end Alembic commands ###
